// responsive
// --------
// This file includes a set of mixins designed for responsive building.
//

// Breakpoints
// -----------
// **palm** starts at `320px` and ends at `767px`.
$palm-start:      	320px!default;
$palm-end:        	767px!default;

// **lap** starts at `768px` and ends at `1024px`.
$lap-start:       	768px!default;
$lap-end:         	1024px!default;

// **desk** starts at `1025px`.
$desk-start:      	1025px!default;
$desk-wide-start: 	1400px!default;

// media-query
@mixin media-query($media-query) {
	@if $media-query == palm {
		@media only screen and (min-width: $palm-start) and (max-width: $palm-end) {
			@content;
		}
	}
	@if $media-query == palm-pt {
		@media only screen and (min-width: $palm-start) and (max-width: $palm-end) and (orientation: portrait) {
			@content;
		}
	}
	@if $media-query == palm-ld {
		@media only screen and (min-width: $palm-start) and (max-width: $palm-end) and (orientation: landscape) {
			@content;
		}
	}
	@if $media-query == lap {
		@media only screen and (min-width: $lap-start) and (max-width: $lap-end) {
			@content;
		}
	}
	@if $media-query == lap-pt {
		@media only screen and (min-width: $lap-start) and (max-width: $lap-end) and (orientation: portrait) {
			@content;
		}
	}
	@if $media-query == lap-ld {
		@media only screen and (min-width: $lap-start) and (max-width: $lap-end) and (orientation: landscape) {
			@content;
		}
	}
	@if $media-query == device {
		@media only screen and (max-width: $lap-end) {
			@content;
		}
	}
	@if $media-query == desk {
		@media only screen and (min-width: $desk-start) {
			@content;
		}
	}
	@if $media-query == desk-wide {
		@media only screen and (min-width: $desk-wide-start) {
			@content;
		}
	}
}





// grid extends
// the standard grid uses inline-block elements and a font-size hack to remove whitespace
// the flex grid uses flexbox, is set to wrap and row by default, no font-size hack

// grid silent extend
// extend on grid elements
%grid {
    box-sizing:border-box;
    font-size: 0;
    list-style:none;
    margin:0;
    padding:0;
}

// grid-item silent extend
// extend on grid-items elements
%grid-item {
    box-sizing:border-box;
    display:inline-block;
    font-size: initial;
    margin:0;
    padding:0;
    vertical-align:top;
    width:100%;
}

// flexbox grid silent extend
// extend on grid elements
// check for scope, won't work on IE<10
%flexgrid {
    box-sizing:border-box;
    display: flex;
    flex-flow: row wrap;
    list-style:none;
    margin:0;
    padding:0;
}


// grid mixin
//
// use :
// .maclasse {
// 		@extend %grid;
// 		.montiem {
// 			@extend %grid-item;
// 		}
// 		.monitem:nth-child(1) {
// 			@include griditem(desk, 1, 6);
// 			@include griditem(lap, 3, 6);
// 			100%
// 		}
// 		...
// }
@mixin griditem($break, $size, $max) {
    @include media-query($break) {
        width: ($size/$max) * 100%;
    }
}
